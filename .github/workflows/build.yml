name: Compose Desktop Build

env:
  GITHUB_DEPLOY: 'false'

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
    paths-ignore:
      - 'docs/**'
      - LICENSE
      - README.md

  pull_request:
    branches:
      - main

  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:
  repository_dispatch:
    types: [ app-release ]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build Package
    timeout-minutes: 15
    continue-on-error: false

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        jdk: [ 17 ]
        include:
          - os: ubuntu-latest
            cmd: ./gradlew
          - os: macos-latest
            cmd: ./gradlew
          - os: windows-latest
            cmd: ./gradlew.bat

    steps:
      - name: Check out the source code
        uses: actions/checkout@v2

      - name: Download ${{ matrix.os }} OpenJDK ${{ matrix.jdk }}
        id: download-jdk
        uses: sormuras/download-jdk@v1
        with:
          feature: ${{ matrix.jdk }}

      - name: Set up OpenJDK ${{ matrix.jdk }}
        id: setup-java
        uses: actions/setup-java@v2
        if: always() && steps.download-jdk.outcome == 'success'
        with:
          distribution: jdkfile
          java-version: ${{ env.JDK_VERSION }}
          jdkFile: ${{ env.JDK_FILE }}

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle Build
        id: gradle-build
        run: ./gradlew packageUberJarForCurrentOS package

      - name: Deploy to GitHub Packages (Linux)
        if: env.GITHUB_DEPLOY == 'true' && runner.os == 'Linux'
        run: |
          ./gradlew deploy
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Uploading ${{ matrix.os }} uber jar
        if: steps.gradle-build.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.gradle-build.outputs.uber_jar_name }}
          path: |
            ${{ steps.gradle-build.outputs.uber_jar_path }}
          if-no-files-found: error

      - name: Uploading ${{ matrix.os }} native package
        if: steps.gradle-build.outcome == 'success'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.gradle-build.outputs.app_pkg_name }}
          path: |
            ${{ steps.gradle-build.outputs.app_pkg_path }}
          if-no-files-found: error

  release:
    name: Release new version.
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - name: Download the build artifacts
        uses: actions/download-artifact@v2
        if: startsWith(github.ref, 'refs/tags/')

      - name: Github Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            **/*.jar
            **/*.deb
            **/*.exe
            **/*.dmg
          fail_on_unmatched_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}